{"ast":null,"code":"var _jsxFileName = \"/ocean/pacific/University/2020/IFB398/overdrive/src/UIElements/Canvas.js\";\nimport React from 'react';\nimport * as canvasDraw from \"./CanvasDraw\";\nexport class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ocm = e => {\n      e.preventDefault();\n    };\n\n    this.mouseDown = (e, canvas) => {\n      var position = canvasDraw.getGraphXYFromMouseEvent(e);\n      var x = position[0];\n      var y = position[1]; // If it was a left click\n\n      if (e.button === 0) {\n        canvasDraw.onMousePress(canvas, x, y);\n      } // if it was a right click\n\n\n      if (e.button === 2) {\n        this.props.setLeftMenu(canvasDraw.findIntersected(x, y));\n      } // If it was a middle click\n\n\n      if (e.button === 1) {\n        e.preventDefault();\n        canvasDraw.onMiddleClick(canvas, x, y);\n      }\n    };\n\n    this.mouseUp = (e, canvas) => {\n      var position = canvasDraw.getGraphXYFromMouseEvent(e);\n      var x = position[0];\n      var y = position[1]; // If it was a left click\n\n      if (e.button === 0) {\n        canvasDraw.onMouseRelease(canvas, x, y);\n      }\n\n      if (e.button === 1) {\n        canvasDraw.solidifyObject();\n      }\n    };\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.zoom = nextProps.mainState.zoomLevel;\n    this.tool = nextProps.mainState.drawMode;\n  }\n\n  componentDidMount() {\n    this.zoom = this.props.mainState.zoomLevel;\n    this.tool = this.props.mainState.drawMode;\n  } // prevent context (right-click) menu from appearing\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      id: \"drawCanvas\",\n      onContextMenu: e => this.ocm(e),\n      onMouseDown: e => this.mouseDown(e, this),\n      onMouseUp: e => this.mouseUp(e, this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \" Canvas's are not supported by your browser\"));\n  }\n\n}\nwindow.addEventListener(\"resize\", canvasDraw.resetMouseOrigin);","map":{"version":3,"sources":["/ocean/pacific/University/2020/IFB398/overdrive/src/UIElements/Canvas.js"],"names":["React","canvasDraw","Canvas","Component","constructor","props","ocm","e","preventDefault","mouseDown","canvas","position","getGraphXYFromMouseEvent","x","y","button","onMousePress","setLeftMenu","findIntersected","onMiddleClick","mouseUp","onMouseRelease","solidifyObject","canvasRef","createRef","componentWillReceiveProps","nextProps","zoom","mainState","zoomLevel","tool","drawMode","componentDidMount","render","window","addEventListener","resetMouseOrigin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AAEA,OAAO,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,GAlBmB,GAkBZC,CAAD,IAAO;AACTA,MAAAA,CAAC,CAACC,cAAF;AACH,KApBkB;;AAAA,SAwBnBC,SAxBmB,GAwBP,CAACF,CAAD,EAAIG,MAAJ,KAAe;AACvB,UAAIC,QAAQ,GAAGV,UAAU,CAACW,wBAAX,CAAoCL,CAApC,CAAf;AACA,UAAIM,CAAC,GAAGF,QAAQ,CAAC,CAAD,CAAhB;AAAqB,UAAIG,CAAC,GAAGH,QAAQ,CAAC,CAAD,CAAhB,CAFE,CAIvB;;AACA,UAAGJ,CAAC,CAACQ,MAAF,KAAa,CAAhB,EAAkB;AACdd,QAAAA,UAAU,CAACe,YAAX,CAAwBN,MAAxB,EAAgCG,CAAhC,EAAmCC,CAAnC;AACH,OAPsB,CAQvB;;;AACA,UAAGP,CAAC,CAACQ,MAAF,KAAa,CAAhB,EAAkB;AACd,aAAKV,KAAL,CAAWY,WAAX,CAAuBhB,UAAU,CAACiB,eAAX,CAA2BL,CAA3B,EAA8BC,CAA9B,CAAvB;AACH,OAXsB,CAYvB;;;AACA,UAAGP,CAAC,CAACQ,MAAF,KAAa,CAAhB,EAAkB;AACdR,QAAAA,CAAC,CAACC,cAAF;AACAP,QAAAA,UAAU,CAACkB,aAAX,CAAyBT,MAAzB,EAAiCG,CAAjC,EAAoCC,CAApC;AACH;AACJ,KAzCkB;;AAAA,SA2CnBM,OA3CmB,GA2CT,CAACb,CAAD,EAAIG,MAAJ,KAAc;AACpB,UAAIC,QAAQ,GAAGV,UAAU,CAACW,wBAAX,CAAoCL,CAApC,CAAf;AACA,UAAIM,CAAC,GAAGF,QAAQ,CAAC,CAAD,CAAhB;AAAqB,UAAIG,CAAC,GAAGH,QAAQ,CAAC,CAAD,CAAhB,CAFD,CAIpB;;AACA,UAAGJ,CAAC,CAACQ,MAAF,KAAa,CAAhB,EAAmB;AACfd,QAAAA,UAAU,CAACoB,cAAX,CAA0BX,MAA1B,EAAkCG,CAAlC,EAAqCC,CAArC;AACH;;AAED,UAAGP,CAAC,CAACQ,MAAF,KAAa,CAAhB,EAAkB;AACdd,QAAAA,UAAU,CAACqB,cAAX;AACH;AAEJ,KAxDkB;;AAEf,SAAKC,SAAL,GAAiBvB,KAAK,CAACwB,SAAN,EAAjB;AACH;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,SAAKC,IAAL,GAAYD,SAAS,CAACE,SAAV,CAAoBC,SAAhC;AACA,SAAKC,IAAL,GAAYJ,SAAS,CAACE,SAAV,CAAoBG,QAAhC;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,IAAL,GAAY,KAAKtB,KAAL,CAAWuB,SAAX,CAAqBC,SAAjC;AACA,SAAKC,IAAL,GAAY,KAAKzB,KAAL,CAAWuB,SAAX,CAAqBG,QAAjC;AAEH,GAhBuC,CAkBxC;;;AAyCAE,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAQ,MAAA,GAAG,EAAE,KAAKV,SAAlB;AAA6B,MAAA,EAAE,EAAC,YAAhC;AAA6C,MAAA,aAAa,EAAGhB,CAAD,IAAO,KAAKD,GAAL,CAASC,CAAT,CAAnE;AAAgF,MAAA,WAAW,EAAGA,CAAD,IAAO,KAAKE,SAAL,CAAeF,CAAf,EAAkB,IAAlB,CAApG;AAA6H,MAAA,SAAS,EAAGA,CAAD,IAAO,KAAKa,OAAL,CAAab,CAAb,EAAgB,IAAhB,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADD,CAAP;AAIH;;AAhEuC;AAoE5C2B,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiClC,UAAU,CAACmC,gBAA5C","sourcesContent":["import React from 'react';\nimport * as canvasDraw from \"./CanvasDraw\";\n\nexport class Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.zoom = nextProps.mainState.zoomLevel;\n        this.tool = nextProps.mainState.drawMode;\n\n    }\n\n    componentDidMount() {\n        this.zoom = this.props.mainState.zoomLevel;\n        this.tool = this.props.mainState.drawMode;\n\n    }\n\n    // prevent context (right-click) menu from appearing\n    ocm = (e) => {\n        e.preventDefault();\n    };\n\n    //todo: add canvas method for mouse out, to prevent drawing bug when starting draw and then leaving the canvas\n\n    mouseDown = (e, canvas) => {\n        var position = canvasDraw.getGraphXYFromMouseEvent(e);\n        var x = position[0]; var y = position[1];\n\n        // If it was a left click\n        if(e.button === 0){\n            canvasDraw.onMousePress(canvas, x, y);\n        }\n        // if it was a right click\n        if(e.button === 2){\n            this.props.setLeftMenu(canvasDraw.findIntersected(x, y));\n        }\n        // If it was a middle click\n        if(e.button === 1){\n            e.preventDefault();\n            canvasDraw.onMiddleClick(canvas, x, y)\n        }\n    };\n\n    mouseUp = (e, canvas) =>{\n        var position = canvasDraw.getGraphXYFromMouseEvent(e);\n        var x = position[0]; var y = position[1];\n\n        // If it was a left click\n        if(e.button === 0) {\n            canvasDraw.onMouseRelease(canvas, x, y);\n        }\n\n        if(e.button === 1){\n            canvasDraw.solidifyObject()\n        }\n\n    };\n\n    render() {\n        return <canvas ref={this.canvasRef} id=\"drawCanvas\" onContextMenu={(e) => this.ocm(e)} onMouseDown={(e) => this.mouseDown(e, this)} onMouseUp={(e) => this.mouseUp(e, this)}>\n                <p> Canvas's are not supported by your browser</p>\n            </canvas>\n\n    }\n\n}\n\nwindow.addEventListener(\"resize\",canvasDraw.resetMouseOrigin)\n"]},"metadata":{},"sourceType":"module"}